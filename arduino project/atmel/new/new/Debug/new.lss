
new.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001fa  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  000001fa  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  00000229  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000237  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b6b  00000000  00000000  00000257  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005d1  00000000  00000000  00000dc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000034a  00000000  00000000  00001393  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000016e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001af  00000000  00000000  00001704  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000042a  00000000  00000000  000018b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001cdd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000178  00000178  000001ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001cf0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.main    000000f6  0000006c  0000006c  000000e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__dummy_fini 00000002  00000180  00000180  000001f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__dummy_funcs_on_exit 00000002  00000182  00000182  000001f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__dummy_simulator_exit 00000002  00000184  00000184  000001f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.exit    00000016  00000162  00000162  000001d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text._Exit   00000004  0000017c  0000017c  000001f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
   8:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
   c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  10:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  14:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  18:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  1c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  20:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  24:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  28:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  2c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  30:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  34:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  38:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  3c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  40:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  44:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  48:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  4c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
  50:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <_etext>
  64:	0c 94 b1 00 	jmp	0x162	; 0x162 <exit>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>

Disassembly of section .text:

00000178 <__bad_interrupt>:
 178:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

0000006c <main>:

#include <xc.h>
#include <util/delay.h>
int main(void)
{
	DDRC=0XFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	84 bb       	out	0x14, r24	; 20
		
		/*PORTC=0XFF;
		_delay_ms(1000);
		PORTC=0;
		_delay_ms(500);*/
		PORTC=0B10000000;
  70:	80 e8       	ldi	r24, 0x80	; 128
  72:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  74:	87 ea       	ldi	r24, 0xA7	; 167
  76:	91 e6       	ldi	r25, 0x61	; 97
  78:	01 97       	sbiw	r24, 0x01	; 1
  7a:	f1 f7       	brne	.-4      	; 0x78 <main+0xc>
  7c:	00 c0       	rjmp	.+0      	; 0x7e <main+0x12>
  7e:	00 00       	nop
		_delay_ms(100);
		PORTC=0;
  80:	15 ba       	out	0x15, r1	; 21
  82:	83 ec       	ldi	r24, 0xC3	; 195
  84:	99 e0       	ldi	r25, 0x09	; 9
  86:	01 97       	sbiw	r24, 0x01	; 1
  88:	f1 f7       	brne	.-4      	; 0x86 <main+0x1a>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <main+0x20>
  8c:	00 00       	nop
		_delay_ms(10);
		PORTC=0B01000000;
  8e:	80 e4       	ldi	r24, 0x40	; 64
  90:	85 bb       	out	0x15, r24	; 21
  92:	87 ea       	ldi	r24, 0xA7	; 167
  94:	91 e6       	ldi	r25, 0x61	; 97
  96:	01 97       	sbiw	r24, 0x01	; 1
  98:	f1 f7       	brne	.-4      	; 0x96 <main+0x2a>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <main+0x30>
  9c:	00 00       	nop
		_delay_ms(100);
		PORTC=0;
  9e:	15 ba       	out	0x15, r1	; 21
  a0:	83 ec       	ldi	r24, 0xC3	; 195
  a2:	99 e0       	ldi	r25, 0x09	; 9
  a4:	01 97       	sbiw	r24, 0x01	; 1
  a6:	f1 f7       	brne	.-4      	; 0xa4 <main+0x38>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <main+0x3e>
  aa:	00 00       	nop
		_delay_ms(10);
		PORTC=0B00100000;
  ac:	80 e2       	ldi	r24, 0x20	; 32
  ae:	85 bb       	out	0x15, r24	; 21
  b0:	87 ea       	ldi	r24, 0xA7	; 167
  b2:	91 e6       	ldi	r25, 0x61	; 97
  b4:	01 97       	sbiw	r24, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <main+0x48>
  b8:	00 c0       	rjmp	.+0      	; 0xba <main+0x4e>
  ba:	00 00       	nop
		_delay_ms(100);
		PORTC=0;
  bc:	15 ba       	out	0x15, r1	; 21
  be:	83 ec       	ldi	r24, 0xC3	; 195
  c0:	99 e0       	ldi	r25, 0x09	; 9
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <main+0x56>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <main+0x5c>
  c8:	00 00       	nop
		_delay_ms(10);
		PORTC=0B00010000;
  ca:	80 e1       	ldi	r24, 0x10	; 16
  cc:	85 bb       	out	0x15, r24	; 21
  ce:	87 ea       	ldi	r24, 0xA7	; 167
  d0:	91 e6       	ldi	r25, 0x61	; 97
  d2:	01 97       	sbiw	r24, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <main+0x66>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <main+0x6c>
  d8:	00 00       	nop
		_delay_ms(100);
		PORTC=0;
  da:	15 ba       	out	0x15, r1	; 21
  dc:	83 ec       	ldi	r24, 0xC3	; 195
  de:	99 e0       	ldi	r25, 0x09	; 9
  e0:	01 97       	sbiw	r24, 0x01	; 1
  e2:	f1 f7       	brne	.-4      	; 0xe0 <main+0x74>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <main+0x7a>
  e6:	00 00       	nop
		_delay_ms(10);
		PORTC=0B00001000;
  e8:	88 e0       	ldi	r24, 0x08	; 8
  ea:	85 bb       	out	0x15, r24	; 21
  ec:	87 ea       	ldi	r24, 0xA7	; 167
  ee:	91 e6       	ldi	r25, 0x61	; 97
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <main+0x84>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <main+0x8a>
  f6:	00 00       	nop
		_delay_ms(100);
		PORTC=0;
  f8:	15 ba       	out	0x15, r1	; 21
  fa:	83 ec       	ldi	r24, 0xC3	; 195
  fc:	99 e0       	ldi	r25, 0x09	; 9
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <main+0x92>
 102:	00 c0       	rjmp	.+0      	; 0x104 <main+0x98>
 104:	00 00       	nop
		_delay_ms(10);
		PORTC=0B00000100;
 106:	84 e0       	ldi	r24, 0x04	; 4
 108:	85 bb       	out	0x15, r24	; 21
 10a:	87 ea       	ldi	r24, 0xA7	; 167
 10c:	91 e6       	ldi	r25, 0x61	; 97
 10e:	01 97       	sbiw	r24, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <main+0xa2>
 112:	00 c0       	rjmp	.+0      	; 0x114 <main+0xa8>
 114:	00 00       	nop
		_delay_ms(100);
		PORTC=0;
 116:	15 ba       	out	0x15, r1	; 21
 118:	83 ec       	ldi	r24, 0xC3	; 195
 11a:	99 e0       	ldi	r25, 0x09	; 9
 11c:	01 97       	sbiw	r24, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <main+0xb0>
 120:	00 c0       	rjmp	.+0      	; 0x122 <main+0xb6>
 122:	00 00       	nop
		_delay_ms(10);
		PORTC=0B00000010;
 124:	82 e0       	ldi	r24, 0x02	; 2
 126:	85 bb       	out	0x15, r24	; 21
 128:	87 ea       	ldi	r24, 0xA7	; 167
 12a:	91 e6       	ldi	r25, 0x61	; 97
 12c:	01 97       	sbiw	r24, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <main+0xc0>
 130:	00 c0       	rjmp	.+0      	; 0x132 <main+0xc6>
 132:	00 00       	nop
		_delay_ms(100);
		PORTC=0;
 134:	15 ba       	out	0x15, r1	; 21
 136:	83 ec       	ldi	r24, 0xC3	; 195
 138:	99 e0       	ldi	r25, 0x09	; 9
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <main+0xce>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <main+0xd4>
 140:	00 00       	nop
		_delay_ms(10);
		PORTC=0B00000001;
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	85 bb       	out	0x15, r24	; 21
 146:	87 ea       	ldi	r24, 0xA7	; 167
 148:	91 e6       	ldi	r25, 0x61	; 97
 14a:	01 97       	sbiw	r24, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <main+0xde>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <main+0xe4>
 150:	00 00       	nop
		_delay_ms(100);
		PORTC=0;
 152:	15 ba       	out	0x15, r1	; 21
 154:	83 ec       	ldi	r24, 0xC3	; 195
 156:	99 e0       	ldi	r25, 0x09	; 9
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <main+0xec>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <main+0xf2>
 15e:	00 00       	nop
 160:	87 cf       	rjmp	.-242    	; 0x70 <main+0x4>

Disassembly of section .text.__dummy_fini:

00000180 <_fini>:
 180:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000182 <__funcs_on_exit>:
 182:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000184 <__simulator_exit>:
 184:	08 95       	ret

Disassembly of section .text.exit:

00000162 <exit>:
 162:	ec 01       	movw	r28, r24
 164:	0e 94 c1 00 	call	0x182	; 0x182 <__funcs_on_exit>
 168:	0e 94 c0 00 	call	0x180	; 0x180 <_fini>
 16c:	ce 01       	movw	r24, r28
 16e:	0e 94 c2 00 	call	0x184	; 0x184 <__simulator_exit>
 172:	ce 01       	movw	r24, r28
 174:	0e 94 be 00 	call	0x17c	; 0x17c <_Exit>

Disassembly of section .text._Exit:

0000017c <_Exit>:
 17c:	0e 94 34 00 	call	0x68	; 0x68 <_exit>
